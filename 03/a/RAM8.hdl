// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
	//Register sequence
	DMux8Way(in=load, sel=address, a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7);
	Register(in=in, load=r0, out=R0);
	Register(in=in, load=r1, out=R1);
	Register(in=in, load=r2, out=R2);
	Register(in=in, load=r3, out=R3);
	Register(in=in, load=r4, out=R4);
	Register(in=in, load=r5, out=R5);
	Register(in=in, load=r6, out=R6);
	Register(in=in, load=r7, out=R7);
	Mux8Way16(a=R0, b=R1, c=R2, d=R3, e=R4, f=R5, g=R6, h=R7, sel=address, out=out);
}
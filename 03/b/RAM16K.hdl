// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16]; 

    PARTS:
    // Put your code here:
	//Note that: address length = 14 = 12 + 2
	DMux4Way(in=load, sel=address[0..1], a=r0, b=r1, c=r2, d=r3);
	RAM4K(address=address[2..13], in=in, load=r0, out=R0);
	RAM4K(address=address[2..13], in=in, load=r1, out=R1);
	RAM4K(address=address[2..13], in=in, load=r2, out=R2);
	RAM4K(address=address[2..13], in=in, load=r3, out=R3);
	Mux4Way16(a=R0, b=R1, c=R2, d=R3, sel=address[0..1], out=out);
}